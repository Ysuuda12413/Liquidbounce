package net.ccbluex.liquidbounce.features.module.modules.exploit

import net.ccbluex.liquidbounce.event.PacketEvent
import net.ccbluex.liquidbounce.utils.client.PacketUtils
import net.ccbluex.liquidbounce.event.handler
import net.ccbluex.liquidbounce.features.module.Category
import net.ccbluex.liquidbounce.features.module.Module
import net.minecraft.network.Packet
import net.minecraft.network.play.client.*
import net.minecraft.network.play.server.S08PacketPlayerPosLook
import kotlin.random.Random

object IntaveDisabler : Module(
    name = "IntaveDisabler",
    category = Category.EXPLOIT,
) {
    private var lastAttackTime = 0L

    val onPacket = handler<PacketEvent> { event ->
        val packet = event.packet

        // ----- KillAura Bypass -----
        if (packet is C02PacketUseEntity && packet.action == C02PacketUseEntity.Action.ATTACK) {
            val delay = (55..120).random()
            if (System.currentTimeMillis() - lastAttackTime < delay) {
                event.cancelEvent()
                return@handler
            }
            lastAttackTime = System.currentTimeMillis()
        }

        // ----- Scaffold Bypass -----
        if (packet is C08PacketPlayerBlockPlacement) {
            val newPacket = C08PacketPlayerBlockPlacement(
                packet.position,
                packet.placedBlockDirection,
                packet.stack,
                (packet.placedBlockOffsetX + Random.nextDouble(-0.1, 0.1)).toFloat(),
                (packet.placedBlockOffsetY + Random.nextDouble(-0.1, 0.1)).toFloat(),
                (packet.placedBlockOffsetZ + Random.nextDouble(-0.1, 0.1)).toFloat()
            )
            event.cancelEvent()
            PacketUtils.sendPacket(newPacket, triggerEvent = false)
        }

        // ----- Velocity/Knockback Bypass -----
        if (packet is C03PacketPlayer && packet.getRotating()) {
            // Randomize yaw nhỏ hoặc set zero để bypass velocity (dùng nextDouble thay vì nextFloat)
            packet.yaw += (Random.nextDouble(-1.0, 1.0)).toFloat()
            packet.pitch += (Random.nextDouble(-1.0, 1.0)).toFloat()
        }


        // ----- Lagback Bypass -----
        if (packet is S08PacketPlayerPosLook) {
            event.cancelEvent()
        }
    }

    override val tag: String
        get() = "DuyunDz On Top"
}